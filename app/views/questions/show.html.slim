.question
  .question__content
    h1= @question.title
    p= @question.body
    .vote__balance
      | Баланс голосов:
      .vote__value
        =< @question.balance_votes
    - if current_user && !current_user.owner?(@question)
      .vote
        .vote__up class = ("#{show_item_helper(@question, current_user) ? '' : 'hidden_item'}")
          = link_to 'Vote Up',
                  vote_up_question_path(@question),
                  remote: true,
                  data: {type: :json},
                  method: :post
          = link_to 'Vote Down',
                  vote_down_question_path(@question),
                  remote: true,
                  data: {type: :json},
                  method: :post
        .vote__reset class = ("#{show_item_helper(@question, current_user) ? 'hidden_item' : ''}")
          = link_to 'Vote RESET',
                  vote_reset_question_path(@question),
                  remote: true,
                  data: {type: :json},
                  method: :delete

  h4 Links:
  = render 'shared/link', resource: @question

  h4 Attached files:
  .attachments
    - if @question.files.attached?
      - @question.files.each do |file|
        = content_tag :p,
                      class: "question__attachment__file",
                      id: "attachment_id_#{file.id}"
          = link_to file.filename.to_s, url_for(file), target: '_blank'
          - if current_user&.owner?(@question)
            =< link_to 'Delete', attachment_path(file), method: :delete, remote: true

  h4 Reward:
  - if @question.reward.present?
    = render @question.reward

h4 List answers:
.answers
  = render @question.answers

- if current_user
  .new_answer
    = render 'answers/form'
